{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","_","axios","get","then","response","data","newObj","post","id","put","delete","Filter","filter","onChange","value","PersonForm","submit","name","number","onNameChange","onNumberChange","onSubmit","type","NumbersTableRow","person","deleteById","onClick","window","confirm","NumbersTable","persons","shownPersons","toLowerCase","includes","className","map","key","Notification","message","isError","content","Footer","style","marginTop","textAlign","color","fontStyle","fontSize","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setNewMsg","addPerson","a","personObj","phonebookService","concat","showNotification","catch","error","showErrorMsg","update","find","changePerson","updatedPerson","fetchPersons","initialPhonebook","p","setTimeout","useEffect","event","target","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"yQAOMA,EAAU,eAUD,EARA,SAAAC,GAAC,OAAIC,IAAMC,IAAIH,GAASI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQlD,EANA,SAAAC,GAAM,OAAIL,IAAMM,KAAKR,EAASO,GAAQH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAMhE,EAJA,SAACG,EAAIF,GAAL,OAAgBL,IAAMQ,IAAN,UAAaV,EAAb,YAAwBS,GAAMF,GAAQH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAIhF,EAFI,SAAAG,GAAE,OAAIP,IAAMS,OAAN,UAAgBX,EAAhB,YAA2BS,IAAML,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCZ9EM,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACX,oCACI,oDACA,2BAAOC,MAAOF,EAAQC,SAAUA,MAGlCE,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,eAAvC,OACf,0BAAMC,SAAUL,GACZ,+BACI,+BACI,4BACI,sCACA,4BAAI,2BAAOF,MAAOG,EAAMJ,SAAUM,MAEtC,4BACI,uCACA,4BAAI,2BAAOL,MAAOI,EAAQL,SAAUO,QAIhD,4BAAQE,KAAK,UAAb,SAGFC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAX,OACpB,4BACI,4BAAKD,EAAOP,MACZ,4BAAKO,EAAON,QACZ,4BACI,4BAAQQ,QAAS,WACTC,OAAOC,QAAP,iBAAyBJ,EAAOP,KAAhC,QACAQ,EAAWD,KAFnB,aAONK,EAAe,SAAC,GAAqC,IAAnCjB,EAAkC,EAAlCA,OAAQkB,EAA0B,EAA1BA,QAASL,EAAiB,EAAjBA,WAC/BM,EAAeD,EAAQlB,QAAO,SAAAY,GAAM,OACtCA,EAAOP,KAAKe,cAAcC,SAASrB,EAAOoB,gBACvCR,EAAON,OAAOc,cAAcC,SAASrB,EAAOoB,kBACnD,OAAO,oCACH,uCACA,2BAAOE,UAAU,iBACb,+BACI,4BAAI,oCAAa,sCAAe,+BAEpC,+BACKH,EAAaI,KAAI,SAAAX,GAAM,OAAI,kBAAC,EAAD,CAAiBY,IAAKZ,EAAOP,KAAMO,OAAQA,EAAQC,WAAYA,WAMrGY,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiBA,EAAU,yBAAKJ,UAAWI,EAAQC,QAAU,QAAU,gBAAiBD,EAAQE,SAAiB,MAEhIC,EAAS,WAQX,OACI,yBAAKC,MARW,CAChBC,UAAW,GACXC,UAAW,SACXC,MAAO,GACPC,UAAW,SACXC,SAAU,KAIN,kEAwGGC,EAnGH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPnB,EADO,KACEoB,EADF,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,OAGoBH,mBAAS,IAH7B,mBAGPI,EAHO,KAGIC,EAHJ,OAIoBL,mBAAS,IAJ7B,mBAIPM,EAJO,KAIIC,EAJJ,OAKeP,qBALf,mBAKPX,EALO,KAKEmB,EALF,KAoBRC,EAAS,uCAAG,4BAAAC,EAAA,6DACRC,EAAY,CACd3C,KAAMkC,EACNjC,OAAQmC,GAHE,SAKRQ,EACMD,GACPzD,MAAK,SAAAqB,GACF0B,EAAWpB,EAAQgC,OAAOtC,IAC1B4B,EAAW,IACXE,EAAa,IACbS,EAAiB,gCAAD,OAAiCvC,EAAOP,KAAxC,cAEnB+C,OAAM,SAAAC,GACHC,EAAaD,EAAM7D,SAASC,KAAKiC,YAd3B,2CAAH,qDAkBT6B,EAAM,uCAAG,8BAAAR,EAAA,6DACLnC,EAASM,EAAQsC,MAAK,SAAA5C,GAAM,OAAIA,EAAOP,OAASkC,KAChDkB,EAFK,2BAEe7C,GAFf,IAEuBN,OAAQmC,IAF/B,SAGLQ,EACMQ,EAAa7D,GAAI6D,GACxBlE,MAAK,SAAAmE,GACFpB,EAAWpB,EAAQK,KAAI,SAAAX,GAAM,OAAIA,EAAOP,OAASkC,EAAU3B,EAAS8C,MACpEP,EAAiB,gCAAD,OAAiCO,EAAcrD,KAA/C,gBAEnB+C,OAAM,SAAAC,GACHC,EAAaD,EAAM7D,SAASC,KAAKiC,YAV9B,2CAAH,qDAcNiC,EAAY,uCAAG,sBAAAZ,EAAA,sEACjBE,IAEK1D,MAAK,SAAAqE,GACFtB,EAAWsB,MAEdR,OAAM,SAAAC,GACHC,EAAaD,EAAM7D,SAASC,KAAKiC,YAPxB,mFAAH,qDAUZb,EAAU,uCAAG,WAAOD,GAAP,SAAAmC,EAAA,sEACTE,EACUrC,EAAOhB,IAClBL,MAAK,SAAAH,GACFkD,EAAWpB,EAAQlB,QAAO,SAAA6D,GAAC,OAAIA,EAAEjE,KAAOgB,EAAOhB,OAC/CuD,EAAiB,gCAAD,OAAiCvC,EAAOP,KAAxC,gBAEnB+C,OAAM,SAAAhE,GACHkE,EAAa,GAAD,OAAI1C,EAAOP,KAAX,sCACZiC,EAAWpB,EAAQlB,QAAO,SAAA6D,GAAC,OAAIA,EAAEjE,KAAOgB,EAAOhB,UATxC,2CAAH,sDAaVuD,EAAmB,SAACvB,GACtBiB,EAAU,CAAEjB,QAAQ,aAAD,OAAeA,KAClCkC,YAAW,SAAA1E,GAAC,OAAIyD,EAAU,QAAO,MAE/BS,EAAe,SAAC1B,GAClBiB,EAAU,CAAElB,SAAS,EAAMC,QAAQ,GAAD,OAAKA,KACvCkC,YAAW,SAAA1E,GAAC,OAAIyD,EAAU,QAAO,MAKrC,OADAkB,qBAAU,WAAQJ,MAAkB,IAEhC,yBAAKrC,UAAU,aACX,yCACA,kBAAC,EAAD,CAAcI,QAASA,IACvB,kBAAC,EAAD,CAAQ1B,OAAQ2C,EAAW1C,SAAU,SAAC+D,GAAYpB,EAAaoB,EAAMC,OAAO/D,UAC5E,yCACA,kBAAC,EAAD,CAAYE,OArFL,SAAC4D,GACZA,EAAME,iBAED3B,GAAYE,IACbvB,EAAQK,KAAI,SAAAX,GAAM,OAAIA,EAAOP,QAAMgB,SAASkB,GACxCxB,OAAOC,QAAP,UAAkBuB,EAAlB,8EACAgB,IAGJT,MA4E4BzC,KAAMkC,EAASjC,OAAQmC,EAAWlC,aAAc,SAACyD,GAAYxB,EAAWwB,EAAMC,OAAO/D,QAAUM,eAAgB,SAACwD,GAAYtB,EAAasB,EAAMC,OAAO/D,UAClL,kBAAC,EAAD,CAAcF,OAAQ2C,EAAWzB,QAASA,EAASL,WAAYA,IAC/D,kBAAC,EAAD,Q,MCjKZsD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0e0c2339.chunk.js","sourcesContent":["import axios from 'axios'\n\n// const baseUrl = process.env.NODE_ENV === 'development'\n//     ? 'http://localhost:3001/api/persons'\n//     : '/api/persons'\n\n// added a proxy to port 3001\nconst baseUrl = '/api/persons'\n\nconst getAll = _ => axios.get(baseUrl).then(response => response.data)\n\nconst create = newObj => axios.post(baseUrl, newObj).then(response => response.data)\n\nconst update = (id, newObj) => axios.put(`${baseUrl}/${id}`, newObj).then(response => response.data)\n\nconst deleteById = id => axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n\nexport default { getAll, create, update, deleteById }","import React, { useState, useEffect } from 'react'\nimport phonebookService from './services/phonebook'\n\nconst Filter = ({ filter, onChange }) =>\n    <>\n        <div>filter shown with: </div>\n        <input value={filter} onChange={onChange} />\n    </>\n\nconst PersonForm = ({ submit, name, number, onNameChange, onNumberChange }) =>\n    <form onSubmit={submit}>\n        <table>\n            <tbody>\n                <tr>\n                    <td>name: </td>\n                    <td><input value={name} onChange={onNameChange} /></td>\n                </tr>\n                <tr>\n                    <td>phone: </td>\n                    <td><input value={number} onChange={onNumberChange} /></td>\n                </tr>\n            </tbody>\n        </table>\n        <button type=\"submit\">add</button>\n    </form>\n\nconst NumbersTableRow = ({ person, deleteById }) =>\n    <tr>\n        <td>{person.name}</td>\n        <td>{person.number}</td>\n        <td>\n            <button onClick={() => {\n                if (window.confirm(`Delete ${person.name} ?`)) {\n                    deleteById(person)\n                }\n            }}>delete</button>\n        </td>\n    </tr>\nconst NumbersTable = ({ filter, persons, deleteById }) => {\n    const shownPersons = persons.filter(person =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n        || person.number.toLowerCase().includes(filter.toLowerCase()));\n    return <>\n        <h2>Numbers</h2>\n        <table className='numbers_table'>\n            <thead>\n                <tr><td>Name</td><td>Number</td><td></td></tr>\n            </thead>\n            <tbody>\n                {shownPersons.map(person => <NumbersTableRow key={person.name} person={person} deleteById={deleteById} />)}\n            </tbody>\n        </table>\n    </>\n}\n\nconst Notification = ({ message }) => message ? <div className={message.isError ? 'error' : 'notification'}>{message.content}</div> : null\n\nconst Footer = () => {\n    const footerStyle = {\n        marginTop: 20,\n        textAlign: 'center',\n        color: '',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <em>phonebook app, sean_matro @ 2020</em>\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [message, setNewMsg] = useState()\n\n    const submit = (event) => {\n        event.preventDefault()\n\n        if (!newName || !newNumber) return\n        if (persons.map(person => person.name).includes(newName)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the older number with a new one?`)) {\n                update()\n            }\n        } else {\n            addPerson()\n        }\n    }\n\n    const addPerson = async () => {\n        const personObj = {\n            name: newName,\n            number: newNumber\n        }\n        await phonebookService\n            .create(personObj)\n            .then(person => {\n                setPersons(persons.concat(person))\n                setNewName('')\n                setNewNumber('')\n                showNotification(`Note that the information of ${person.name} added`)\n            })\n            .catch(error => {\n                showErrorMsg(error.response.data.message)\n            })\n    }\n\n    const update = async () => {\n        const person = persons.find(person => person.name === newName)\n        const changePerson = { ...person, number: newNumber }\n        await phonebookService\n            .update(changePerson.id, changePerson)\n            .then(updatedPerson => {\n                setPersons(persons.map(person => person.name !== newName ? person : updatedPerson))\n                showNotification(`Note that the information of ${updatedPerson.name} updated`)\n            })\n            .catch(error => {\n                showErrorMsg(error.response.data.message)\n            })\n    }\n\n    const fetchPersons = async () => await\n        phonebookService\n            .getAll()\n            .then(initialPhonebook => {\n                setPersons(initialPhonebook)\n            })\n            .catch(error => {\n                showErrorMsg(error.response.data.message)\n            })\n\n    const deleteById = async (person) => {\n        await phonebookService\n            .deleteById(person.id)\n            .then(_ => {\n                setPersons(persons.filter(p => p.id !== person.id))\n                showNotification(`Note that the information of ${person.name} deleted`)\n            })\n            .catch(_ => {\n                showErrorMsg(`${person.name} was already removed from server.`)\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n    }\n\n    const showNotification = (content) => {\n        setNewMsg({ content: `Note that ${content}` })\n        setTimeout(_ => setNewMsg(null), 3000)\n    }\n    const showErrorMsg = (content) => {\n        setNewMsg({ isError: true, content: `${content}` })\n        setTimeout(_ => setNewMsg(null), 3000)\n    }\n\n    // useEffect function must return a cleanup function or nothing\n    useEffect(() => { fetchPersons() }, []);\n    return (\n        <div className='phonebook'>\n            <h1>Phonebook</h1>\n            <Notification message={message} />\n            <Filter filter={newFilter} onChange={(event) => { setNewFilter(event.target.value) }} />\n            <h2>Add a new</h2>\n            <PersonForm submit={submit} name={newName} number={newNumber} onNameChange={(event) => { setNewName(event.target.value) }} onNumberChange={(event) => { setNewNumber(event.target.value) }} />\n            <NumbersTable filter={newFilter} persons={persons} deleteById={deleteById} />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}